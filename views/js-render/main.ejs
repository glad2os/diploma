<script>
    const chatForm = document.getElementById('name');
    const messages = document.getElementById('messages');
    const online = document.querySelector('.online');

    const socket = io();

    const username = "<%= username %>";
    const room = "<%= room %>";

    // join chat room
    socket.emit('joinRoom', {
        username, room
    });

    //Get room & users
    socket.on('roomUsers', ({room, users}) => {
        //TODO: Front-end part
        console.log(users);
        online.innerHTML = "";
        let ul = document.createElement("ul");

        for (let i = 0; i < users.length; i++) {
            ul.insertAdjacentHTML("beforeend", `<li>${users[i]}</li>`);
        }
        online.appendChild(ul);
    });

    socket.on('message', message => {
        messages.insertAdjacentHTML("beforeend", `
    <div class="message">
    <div class="username">${message.username}</div>
    <div class="time">${message.time}</div>
    <div class="text">${message.text}</div>
</div>
    `);
        messages.scrollTop = messages.scrollHeight
    });

    //Message submit
    chatForm.addEventListener('keyup', (e) => {
        if (e.keyCode === 13) {
            e.preventDefault();
            const msg = e.target.value;

            socket.emit('chatMessage', msg);
            e.target.value = "";
            e.target.focus();
        }
    });

    socket.on('disconnect', () => {
        window.location.href = '/';
    });

    let firstId = 0;

    function getOldMessages() {
        socket.emit("getOldMessages", firstId)
    }

    messages.onscroll = _ => {
        if (firstId !== 0 && messages.scrollTop < 20) {
            getOldMessages();
        }
    }

    socket.on("messages", (arrayMessages) => {
        let newFirstId = arrayMessages[0].id;
        let diff = messages.scrollHeight - messages.scrollTop;

        arrayMessages.reverse().forEach(value => {
            messages.insertAdjacentHTML("afterbegin", `
    <div class="message">
    <div class="username">${value.username}</div>
    <div class="time">${value.time}</div>
    <div class="text">${value.message}</div>
</div>
    `);
        });
        if (firstId === 0) messages.scrollTop = messages.scrollHeight;
        else messages.scrollTop = messages.scrollHeight - diff;
        firstId = newFirstId;
    });


</script>